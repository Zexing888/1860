CHIP P2S {
    IN indata[4], enable, load;
    OUT sout, complete;

    PARTS:

    Bit(in=indata[0], load=load, out=Data0);
    Bit(in=indata[1], load=load, out=Data1);
    Bit(in=indata[2], load=load, out=Data2);
    Bit(in=indata[3], load=load, out=Data3);

    Bit(in=nextActive, load=true, out=active);
    Bit(in=nextCounter0, load=true, out=counter0);
    Bit(in=nextCounter1, load=true, out=counter1);
    
    And(a=counter0, b=counter1, out=counterIs3);
    And(a=counterIs3, b=active, out=a1);
    Bit(in=a1, load=true, out=a2);
    Not(in=a2, out=a3);
    And(a=a1, b=a3, out=complete);

    Not(in=active, out=Active1);
    And(a=enable, b=Active1, out=b1);
    Not(in=a1, out=b2);
    And(a=active, b=b2, out=b3);
    Or(a=b1, b=b3, out=nextActive);

    Xor(a=counter0, b=active, out=c1);
    And(a=counter0, b=active, out=carryOut0);
    Xor(a=counter1, b=carryOut0, out=c2);
    Mux(a=counter0, b=c1, sel=active, out=c3);
    Mux(a=c3, b=false, sel=b1, out=nextCounter0);
    Mux(a=counter1, b=c2, sel=active, out=counterNext1);
    Mux(a=counterNext1, b=false, sel=b1, out=nextCounter1);
    Mux(a=Data0, b=Data1, sel=counter0, out=c5);
    Mux(a=Data2, b=Data3, sel=counter0, out=c6);
    Mux(a=c5, b=c6, sel=counter1, out=c7);
    And(a=c7, b=active, out=sout);
}